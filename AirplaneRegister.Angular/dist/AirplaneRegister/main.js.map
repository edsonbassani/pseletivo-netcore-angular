{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/airplanesregister/airplaneregister-list/airplaneregister-list.component.html","webpack:///./src/app/airplanesregister/airplaneregister-list/airplaneregister-list.component.ts","webpack:///./src/app/airplanesregister/airplaneregister/airplaneregister.component.html","webpack:///./src/app/airplanesregister/airplaneregister/airplaneregister.component.ts","webpack:///./src/app/airplanesregister/airplanesregister.component.html","webpack:///./src/app/airplanesregister/airplanesregister.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/shared/airplaneregister.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<table class=\\\"table table-hover\\\">\\n    <thead>\\n      <tr>\\n        <td>Id</td> \\n        <td>Model</td> \\n        <td>Capacity</td> \\n        <td></td>\\n      </tr>\\n       </thead>\\n  <tr *ngFor=\\\"let ar of service.list\\\">\\n    <td (click)=\\\"populateForm(ar)\\\">{{ar.Id}}</td>\\n    <td (click)=\\\"populateForm(ar)\\\">{{ar.AirplaneTypeName}}</td>\\n    <td (click)=\\\"populateForm(ar)\\\">{{ar.Capacity}}</td>\\n    <td><button (click)=\\\"onDelete(ar.Id)\\\" class=\\\"btn btn-sm btn-outline-danger\\\"><i class=\\\"far fa-minus-square\\\"></i></button></td>\\n  </tr>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { Airplaneregister } from 'src/app/shared/airplaneregister.model';\nimport { AirplaneregisterService } from 'src/app/shared/airplaneregister.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-airplaneregister-list',\n  templateUrl: './airplaneregister-list.component.html',\n  styles: []\n})\nexport class AirplaneregisterListComponent implements OnInit {\n\nconstructor(private service: AirplaneregisterService,\n\n  private toastr: ToastrService) { }\n\n\n\n  ngOnInit() {\n    this.service.refreshList();\n  }\n  \n  populateForm(ar: Airplaneregister) {\n\n    this.service.formData = Object.assign({}, ar);\n\n  }\n\n  onDelete(id: number) {\n\n    if (confirm('Are you sure to delete this record?')) {\n\n      this.service.deleteAirplaneregister(id).subscribe(res => {\n\n        this.service.refreshList();\n\n        this.toastr.warning('Deleted successfully', 'Airplaneregister');\n\n      });\n\n    }\n\n  }\n}\n","module.exports = \"  <form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\n    <input type=\\\"hidden\\\" name=\\\"Id\\\" #Id=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Id\\\">\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text bg-white\\\">\\n                <i class=\\\"fas fa-plane\\\"></i>\\n              </div>\\n        </div>\\n        <select name=\\\"AirplaneTypeId\\\" #AirplaneTypeId=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.AirplaneTypeId\\\" class=\\\"form-control\\\" required>\\n          <option value=\\\"0\\\" selected>Select...</option>\\n          <option value=\\\"1\\\">B737-800</option>\\n          <option value=\\\"2\\\">B737-700</option>\\n          <option value=\\\"3\\\">B737 MAX 8</option>\\n        </select>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <div class=\\\"input-group-text bg-white\\\">\\n                    <i class=\\\"fas fa-user-friends\\\"></i>\\n                  </div>\\n            </div>\\n            <input name=\\\"Capacity\\\" #Capacity=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Capacity\\\" class=\\\"form-control\\\" placeholder=\\\"Capacity\\\" required maxlength=\\\"2\\\" minlength=\\\"1\\\" type=\\\"number\\\">\\n          </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btn-success btn-lg btn-block\\\"><i class=\\\"fas fa-database\\\"></i> Submit</button>\\n    </div>\\n  </form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AirplaneregisterService } from 'src/app/shared/airplaneregister.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-airplaneregister',\n  templateUrl: './airplaneregister.component.html',\n  styles: []\n})\nexport class AirplaneregisterComponent implements OnInit {\n\n  constructor(private service:AirplaneregisterService,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.resetForm();\n  }\n\n  resetForm(form?:NgForm){\n    if(form != null)\n      form.resetForm();\n\n    this.service.formData = {\n      Id :0,\n      AirplaneTypeId :0,\n      Capacity :0,\n      Created :\"\"\n    }\n  }\n\n  onSubmit(form: NgForm) {\n\n    if (form.value.Id == null) \n        form.value.Id = 0;\n\n    if(form.value.Id == 0)\n      this.insertRecord(form);\n    else\n      this.updateRecord(form);\n  }\n\n  insertRecord(form: NgForm) {\n      this.service.postAirplaneRegister(form.value).subscribe(res => {\n      this.toastr.success('Inserted successfully', 'AirplaneRegister');\n      this.resetForm(form);\n      this.service.refreshList();\n    },err => {\n      this.toastr.error('An error has occurred', 'AirplaneRegister');\n      console.log(err);\n    });\n\n  }\n\n\n\n  updateRecord(form: NgForm) {\n\n    this.service.putAirplaneRegister(form.value).subscribe(res => {\n\n      this.toastr.info('Updated successfully', 'AirplaneRegister');\n\n      this.resetForm(form);\n\n      this.service.refreshList();\n\n    },err => {\n      this.toastr.error('An error has occurred', 'AirplaneRegister');\n      console.log(err);\n    });\n\n  }\n\n}\n","module.exports = \"<div class=\\\"jumbotron\\\">\\n\\n    <h1 class=\\\"display-4 text-center\\\">Airplanes Register</h1>\\n  </div>\\n    <hr>\\n  \\n    <div class=\\\"row\\\">\\n  \\n      <div class=\\\"col-md-5\\\">\\n  \\n          <app-airplaneregister></app-airplaneregister>\\n  \\n      </div>\\n  \\n      <div class=\\\"col-md-7\\\">\\n  \\n          <app-airplaneregister-list></app-airplaneregister-list>\\n  \\n      </div>\\n  \\n    </div>\\n  \\n  \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-airplanesregister',\n  templateUrl: './airplanesregister.component.html',\n  styles: []\n})\nexport class AirplanesregisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  \n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <app-airplanesregister></app-airplanesregister>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styles:[]\n})\nexport class AppComponent {\n  title = 'AirplaneRegister';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n \nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppComponent } from './app.component';\nimport { AirplanesregisterComponent } from './airplanesregister/airplanesregister.component';\nimport { AirplaneregisterComponent } from './airplanesregister/airplaneregister/airplaneregister.component';\nimport { AirplaneregisterListComponent } from './airplanesregister/airplaneregister-list/airplaneregister-list.component';\nimport { AirplaneregisterService } from './shared/airplaneregister.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AirplanesregisterComponent,\n    AirplaneregisterComponent,\n    AirplaneregisterListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [AirplaneregisterService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Airplaneregister } from './airplaneregister.model';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AirplaneregisterService {\n  formData:Airplaneregister;\n  readonly rootURL = 'https://localhost:44373/api';\n  list: Airplaneregister[];\n  \n  constructor(private http : HttpClient) { }\n\n  postAirplaneRegister(formData:Airplaneregister){\n    return this.http.post(this.rootURL + '/AirplaneRegister',formData);\n  }\n\n  refreshList(){\n    this.http.get(this.rootURL + '/AirplaneRegister')\n    .toPromise()\n    .then(res => this.list = res as Airplaneregister[]);\n  }\n\n  putAirplaneRegister(formData : Airplaneregister){\n    return this.http.put(this.rootURL+'/AirplaneRegister/'+formData.Id,formData);\n   }\n\n  deleteAirplaneregister(id : number){\n\n    return this.http.delete(this.rootURL + '/AirplaneRegister/'+id);\n\n   }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}